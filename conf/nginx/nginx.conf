# 定义Nginx运行的用户和用户组
user  nginx nginx;
# nginx进程数，建议设置为等于CPU总核心数。
worker_processes  auto;
# 全局错误日志定义类型,[ debug | info | notice | warn | error | crit | alert| emerg]
error_log /data/nginx/logs/error.log info;
# Nginx进程文件
pid /data/nginx/logs/nginx.pid;
# 一个nginx进程打开的最多文件描述符数目
worker_rlimit_nofile 65535;
# 工作模式与连接数上限
events {
      # 事件驱动模型,use [ kqueue | rtsig | epoll | /dev/poll | select | poll | eventport];
      use epoll;
      # 设置网路连接序列化，防止惊群现象发生，默认为on
      accept_mutex on;
      # 设置一个进程是否同时接受多个网络连接，默认为off
      multi_accept on;
      # 单个进程最大连接数（最大连接数=连接数*进程数）
      worker_connections 65535;
}

# 设定http服务器
http { 
     # 文件扩展名与文件类型映射表
     include mime.types;
     # 关联gzip压缩配置
     include gzip.conf; 
     # 关联缓存配置
     include cache.conf;
     # 关联代理配置
     include proxy.conf;
     # 关联waf网站防火墙配置
     include waf.conf;
     # 默认文件类型
     default_type application/octet-stream; 
     # 设定日志格式
     log_format  main '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"'
                      '"$upstream_cache_status"';
     # 隐藏Nginx版本信息
     server_tokens off; 
     # 默认编码 
     charset utf-8; 
     # 服务器名字的hash表大小
     server_names_hash_bucket_size 128;
     # 设置头部哈希表的最大值
     proxy_headers_hash_max_size 51200;
     # 设置头部哈希表大小
     proxy_headers_hash_bucket_size 6400;
     # 客户端请求头部的缓冲区大小
     client_header_buffer_size 256k;
     # 设定客户端请求缓存
     large_client_header_buffers 4 256k;
     # 上传文件大小限制
     client_max_body_size 100m;
     # 开启高效文件传输模式
     sendfile on; 
     # 开启目录列表访问，合适下载服务器，默认关闭。
     autoindex on; 
     # 防止网络阻塞
     tcp_nopush on; 
     # 防止网络阻塞
     tcp_nodelay on; 
     # 长连接超时时间，单位是秒
     keepalive_timeout 0;
     # 不主主动关闭客户端连接
     proxy_ignore_client_abort on;
     
     # 指定连接到后端FastCGI的超时时间
     fastcgi_connect_timeout 300;
     # 指定向FastCGI传送请求的超时时间
     fastcgi_send_timeout 300;
     # 指定接收FastCGI应答的超时时间
     fastcgi_read_timeout 300;
     # 用于指定读取FastCGI应答第一部分需要用多大的缓冲区
     fastcgi_buffer_size 1024k;
     # 指定本地需要用多少和多大的缓冲区来缓冲FastCGI的应答请求
     fastcgi_buffers 16 256k;
     fastcgi_busy_buffers_size 2408k;
     # 表示在写入缓存文件时使用多大的数据块
     fastcgi_temp_file_write_size 4096k;
     # 配置是否启用读取fastcgi服务器消息的缓冲功能
     fastcgi_buffering off;
     # 静态文件不存在会返回404页面
     fastcgi_intercept_errors on;
     
     # 开启限制IP连接数
     limit_conn_zone $binary_remote_addr zone=perip:10m;
     limit_conn_zone $server_name zone=perserver:10m;
     
     # Nginx缓存设置 
     # 缓存临时目录
     proxy_temp_path   /data/nginx/temp/proxy_temp;
     # Web缓存区名称为cache_one，内存缓存空间大小为100MB，1天没有被访问的内容自动清除，硬盘缓存空间大小为2GB。
     proxy_cache_path  /data/nginx/temp/proxy_cache levels=1:2 keys_zone=cache_one:100m inactive=1d max_size=2g;
    
     # PHP缓存文件存放目录
     # levels    缓存层次
     # keys_zone 缓存空间名和共享内存大小(热点内容放在内存)
     # inactive  失效时间, 1d = 1天
     # max_size  最大缓存空间(硬盘占用)
     fastcgi_cache_path /data/nginx/temp/php_cache levels=1:2 keys_zone=cgi_one:10m inactive=2h max_size=2g;
     # PHP缓存临时目录
     fastcgi_temp_path /data/nginx/temp/php_temp;
     
     # Lua modules
     # lua_package_path '/usr/local/share/lua/5.1/?.lua;;';
 
     # 增加虚拟主机
     include vhost/*.conf; 
}
